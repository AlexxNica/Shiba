link rel="import" href="../../bower_components/polymer/polymer.html"
link rel="import" href="../../bower_components/paper-toolbar/paper-toolbar.html"
link rel="import" href="lint-message.html"

dom-module#lint-panel
  style is="custom-style"
    |
      :host {
        font-family: "Helvetica Neue", Helvetica, "Segoe UI", Arial, freesans, sans-serif;
      }
      .paper-header {
        color: white;
        @apply(--shadow-elevation-2dp);
        font-size: 1.5em;
        padding: 4px;
      }
      :host > ::content [no_error] {
        background-color: #d99e5f;
      }
      :host > ::content [error] {
        background-color: #ce3c4a;
      }
      #rule-link {
        float: right;
        margin: 12px;
      }
      .link {
        cursor: pointer;
        color: gray;
      }
      #lint-content {
        padding: 12px;
        font: inherit;
        background-color: #ffd8aa;
      }
      #voice-notification {
        display: none;
      }

  template
    div.paper-header#lint-header[no_error] No Error
    div#lint-content
    footer#rule-link
      span.link on-click="_showLintRules" lint rules
      audio#voice-notification src="[[voice_src]]" preload="auto"

  javascript:
    'use strict';
    let open = null;

    Polymer({
      is: 'lint-panel',

      properties: {
        content: {
          type: Array,
          observer: '_contentUpdated'
        },
        lint_url: String,
        voice_src: {
          type: String,
          value: ''
        }
      },

      _setMessages(messages) {
        let content = document.getElementById('lint-content');
        content.innerHTML = '';

        for (const m of messages) {
          let msg = document.createElement('lint-message');
          msg.message = m;
          content.appendChild(msg);
        }
      },

      _contentUpdated: function(messages) {
        this._setMessages(messages);

        let header = document.getElementById('lint-header');
        if (messages.length > 0) {
          header.innerText = 'Error';
          header.setAttribute('error', '');
          if (this.voice_src !== '') {
            const voice = document.getElementById('voice-notification');
            if (voice) {
              voice.play();
            }
          }
        } else {
          header.innerText = 'No Error';
          header.setAttribute('no_error', '');
        }
      },

      _showLintRules: function() {
        if (this.lint_url === undefined) {
          console.log('No lint URL');
          return;
        }

        if (!open) {
          open = require('shell').openExternal;
        }

        open(this.lint_url);
      }
    });
